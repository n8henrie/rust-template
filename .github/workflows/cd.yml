:
          profile: minimal
          override: true
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          use-cross: {% raw %}${{ matrix.job.use-cross }}{% endraw %}
          toolchain: {% raw %}${{ matrix.rust }}{% endraw %}
          args: --release --target {% raw %}${{ matrix.job.target }}{% endraw %}

      - name: install strip command
        shell: bash
        run: |
          if [[ "{% raw %}${{ matrix.job.target }}{% endraw %}" == aarch64-unknown-linux-gnu ]]; then
              sudo apt update
              sudo apt-get install -y binutils-aarch64-linux-gnu
          fi
      - name: Packaging final binary
        shell: bash
        run: |
          cd target/"{% raw %}${{ matrix.job.target }}{% endraw %}"/release

          ####### reduce binary size by removing debug symbols #######
          BINARY_NAME="{{project-name}}{% raw %}${{ matrix.job.binary-postfix }}{% endraw %}"
          if [[ {{ "{% raw %}${{ matrix.job.target }}{% endraw %} == aarch64-unknown-linux-gnu ]]; then
            GCC_PREFIX="aarch64-linux-gnu-"
          else
            GCC_PREFIX=""
          fi
          "$GCC_PREFIX"strip $BINARY_NAME

          ########## create tar.gz ##########
          RELEASE_NAME={{project-name}}-${GITHUB_REF/refs\/tags\//}-{% raw %}"${{ matrix.job.os-name }}-${{ matrix.job.architecture }}"{% endraw %}
          tar czvf $RELEASE_NAME.tar.gz $BINARY_NAME

          ########## create sha256 ##########
          if [[ {{ "{% raw %}${{ runner.os  }}{% endraw %}" == 'Windows' ]]; then
            certutil -hashfile $RELEASE_NAME.tar.gz sha256 | grep -E [A-Fa-f0-9]{64} > $RELEASE_NAME.sha256
          else
            shasum -a 256 $RELEASE_NAME.tar.gz > $RELEASE_NAME.sha256
          fi
      - name: Releasing assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/"{% raw %}${{ matrix.job.target }}{% endraw %}"/release/{{project-name}}-*.tar.gz
            target/"{% raw %}${{ matrix.job.target }}{% endraw %}"/release/{{project-name}}-*.sha256
        env:
          GITHUB_TOKEN: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
{% endif %}
  publish-cargo:
    name: Publishing to Cargo
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        uses: dtolnay/rust-toolchain@stable
      - run cargo publish --token "{% raw %}${{ secrets.CARGO_API_KEY }}{% endraw %}"
